import{_ as a,c as t,a as s,a4 as l,m as i,o as n}from"./chunks/framework.CFyxHDRz.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/pocket.throttle.md","filePath":"doc/pocket.throttle.md"}'),h={name:"doc/pocket.throttle.md"},e=l(`<p><a href="./">Home</a> &gt; <a href="./pocket.html">@ailer/pocket</a> &gt; <a href="./pocket.throttle.html">throttle</a></p><h2 id="throttle-function" tabindex="-1">throttle() function <a class="header-anchor" href="#throttle-function" aria-label="Permalink to &quot;throttle() function&quot;">​</a></h2><p>节流函数，限制某个函数在一定时间间隔内只能执行一次</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">throttle</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#795E26;--shiki-dark:#B392F0;">fn</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">wait</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">, { </span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">leading</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">trailing</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> }?</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">    leading</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">    trailing</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#795E26;--shiki-dark:#B392F0;">hint</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;"> void</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2>`,6),p=i("table",null,[i("thead",null,[i("tr",null,[i("th",null,[i("p",null,"Parameter")]),i("th",null,[i("p",null,"Type")]),i("th",null,[i("p",null,"Description")])])]),i("tbody",null,[i("tr",null,[i("td",null,[i("p",null,"fn")]),i("td",null,[i("p",null,"(...args: any) => void")]),i("td",null,[i("p",null,"需要节流的函数")])]),i("tr",null,[i("td",null,[i("p",null,"wait")]),i("td",null,[i("p",null,"number")]),i("td",null,[i("p",null,[i("em",null,"(Optional)"),s(" 节流时间间隔，默认为 1000 毫秒")])])]),i("tr",null,[i("td",null,[i("p",{"leading,":"",trailing:""})]),i("td",null,[i("p",null,"{ leading?: boolean | undefined; trailing?: boolean | undefined; }")]),i("td",null,[i("p",null,[i("em",null,"(Optional)")])])]),i("tr",null,[i("td",null,[i("p",null,"hint")]),i("td",null,[i("p",null,"() => void")]),i("td",null,[i("p",null,[i("em",null,"(Optional)"),s(" 节流期间执行的函数，用于提示")])])])])],-1),k=i("p",null,"(...args: any) => void",-1),r=i("p",null,"节流后的函数",-1);function d(o,g,F,u,y,c){return n(),t("div",null,[e,p,s(" **Returns:** "),k,r])}const m=a(h,[["render",d]]);export{_ as __pageData,m as default};
