import{_ as t,c as i,a2 as s,o as e}from"./chunks/framework.Dvyrx0Dh.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"packages/pocket/doc/pocket.validateformula.md","filePath":"packages/pocket/doc/pocket.validateformula.md"}'),p={name:"packages/pocket/doc/pocket.validateformula.md"};function l(r,a,h,n,d,k){return e(),i("div",null,a[0]||(a[0]=[s('<p><a href="./">Home</a> &gt; <a href="./pocket.html">@ailer/pocket</a> &gt; <a href="./pocket.validateformula.html">validateFormula</a></p><h2 id="validateformula-function" tabindex="-1">validateFormula() function <a class="header-anchor" href="#validateformula-function" aria-label="Permalink to &quot;validateFormula() function&quot;">​</a></h2><p>验证数学公式的合法性</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">validateFormula</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#795E26;--shiki-dark:#B392F0;">callback</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#E1E4E8;"> boolean</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>value</p></td><td><p>string</p></td><td><p>要验证的数学公式</p></td></tr><tr><td><p>callback</p></td><td><p>(v: Error) =&gt; void</p></td><td><p>验证结果的回调函数</p></td></tr></tbody></table> **Returns:** <p>boolean</p><p>如果数学公式合法，则返回 true，否则返回 false</p>',10)]))}const g=t(p,[["render",l]]);export{c as __pageData,g as default};
