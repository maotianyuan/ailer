import{_ as i,c as t,a as s,a4 as e,m as a,o as p}from"./chunks/framework.CFyxHDRz.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/pocket.pipe.md","filePath":"doc/pocket.pipe.md"}'),n={name:"doc/pocket.pipe.md"},h=e('<p><a href="./">Home</a> &gt; <a href="./pocket.html">@zero/pocket</a> &gt; <a href="./pocket.pipe.html">pipe</a></p><h2 id="pipe-function" tabindex="-1">pipe() function <a class="header-anchor" href="#pipe-function" aria-label="Permalink to &quot;pipe() function&quot;">​</a></h2><p>函数组合， 执行顺序从左到右 第一个函数参数可以传递多个参数，其他函数必须是单参数函数</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code"><code><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;"> declare</span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#795E26;--shiki-dark:#B392F0;"> pipe</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#795E26;--shiki-dark:#B392F0;">fns</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">[]) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>fns</p></td><td><p>Function[]</p></td><td><p>要组合的函数列表 组合后的函数</p></td></tr></tbody></table>',7),r=a("p",null,"(...args: any[]) => any",-1),l=a("h2",{id:"example",tabindex:"-1"},[s("Example "),a("a",{class:"header-anchor",href:"#example","aria-label":'Permalink to "Example"'},"​")],-1),o=a("p",null,"const fn1 = (a0, a1, a3) => a0 + a1 + a2; const fn2 = (a0) => a0 * 10; const fn3 = (a0) => a0 + 2; const fn = pipe(fn1, fn2, fn3); const result = fn(1, 2, 3) // => 1 * 2 * 3 = 6 * 10 = 60 + 2 => 62",-1);function k(d,c,g,_,y,F){return p(),t("div",null,[h,s(" **Returns:** "),r,l,o])}const u=i(n,[["render",k]]);export{m as __pageData,u as default};
