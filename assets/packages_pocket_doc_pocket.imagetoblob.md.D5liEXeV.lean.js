import{_ as a,c as e,a2 as i,o as s}from"./chunks/framework.Dvyrx0Dh.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"packages/pocket/doc/pocket.imagetoblob.md","filePath":"packages/pocket/doc/pocket.imagetoblob.md"}'),p={name:"packages/pocket/doc/pocket.imagetoblob.md"};function o(l,t,r,n,h,k){return s(),e("div",null,t[0]||(t[0]=[i('<p><a href="./">Home</a> &gt; <a href="./pocket.html">@ailer/pocket</a> &gt; <a href="./pocket.imagetoblob.html">imageToBlob</a></p><h2 id="imagetoblob-function" tabindex="-1">imageToBlob() function <a class="header-anchor" href="#imagetoblob-function" aria-label="Permalink to &quot;imageToBlob() function&quot;">​</a></h2><p>将 HTML 图像元素转换为 Blob 对象</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">imageToBlob</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">img</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#B392F0;"> HTMLImageElement</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#001080;--shiki-dark:#E1E4E8;">Blob</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>img</p></td><td><p>HTMLImageElement</p></td><td><p>HTMLImageElement 对象，表示需要转换为 Blob 对象的图像</p></td></tr></tbody></table> **Returns:** <p>Promise&lt;Blob&gt;</p><p>返回一个 Promise，解析为图像的 Blob 对象</p>',10)]))}const g=a(p,[["render",o]]);export{c as __pageData,g as default};
