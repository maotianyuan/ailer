import{_ as e,c as a,a as s,a4 as r,m as t,o as i}from"./chunks/framework.4aTu-Nia.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/pocket.rgbtohex.md","filePath":"doc/pocket.rgbtohex.md"}'),o={name:"doc/pocket.rgbtohex.md"},p=r('<p><a href="./">Home</a> &gt; <a href="./pocket.html">@zero/pocket</a> &gt; <a href="./pocket.rgbtohex.html">rgbToHex</a></p><h2 id="rgbtohex-function" tabindex="-1">rgbToHex() function <a class="header-anchor" href="#rgbtohex-function" aria-label="Permalink to &quot;rgbToHex() function&quot;">​</a></h2><p>将 RGB 颜色数组转换为十六进制颜色代码</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">rgbToHex</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">rgb</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#B392F0;"> RgbColor</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#E1E4E8;"> string</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>rgb</p></td><td><p>RgbColor</p></td><td><p>参数 <code>rgb</code> 应该是一个数字数组，表示 RGB 颜色模型中颜色的红色、绿色和蓝色值。它还可能包括一个可选的第四个值，表示颜色的 alpha（透明度）值。</p></td></tr></tbody></table>',7),h=t("p",null,"string",-1),n=t("p",null,"函数 rgb_to_hex 返回一个字符串，表示给定 RGB 颜色的十六进制颜色代码。如果 RGB 颜色有一个 alpha 通道，该函数返回一个字符串，表示带有 alpha 通道的十六进制颜色代码",-1);function l(c,d,g,k,_,b){return i(),a("div",null,[p,s(" **Returns:** "),h,n])}const x=e(o,[["render",l]]);export{u as __pageData,x as default};
