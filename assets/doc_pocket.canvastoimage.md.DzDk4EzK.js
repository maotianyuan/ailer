import{_ as t,c as e,a as s,a4 as i,m as a,o as n}from"./chunks/framework.C_gexpgy.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/pocket.canvastoimage.md","filePath":"doc/pocket.canvastoimage.md"}'),p={name:"doc/pocket.canvastoimage.md"},r=i('<p><a href="./">Home</a> &gt; <a href="./pocket.html">@ailer/pocket</a> &gt; <a href="./pocket.canvastoimage.html">canvasToImage</a></p><h2 id="canvastoimage-function" tabindex="-1">canvasToImage() function <a class="header-anchor" href="#canvastoimage-function" aria-label="Permalink to &quot;canvasToImage() function&quot;">​</a></h2><p>将 Canvas 转换为图像对象</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">canvasToImage</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">canvas</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#B392F0;"> HTMLCanvasElement</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">quality</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#E1E4E8;"> HTMLImageElement</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>canvas</p></td><td><p>HTMLCanvasElement</p></td><td><p>要转换的 Canvas 元素</p></td></tr><tr><td><p>quality</p></td><td><p>number</p></td><td><p><em>(Optional)</em> 图像质量，范围在 0 到 1 之间，默认为 1</p></td></tr></tbody></table>',7),o=a("p",null,"HTMLImageElement",-1),h=a("p",null,"转换后的图像对象",-1);function l(c,d,k,m,g,_){return n(),e("div",null,[r,s(" **Returns:** "),o,h])}const y=t(p,[["render",l]]);export{v as __pageData,y as default};
