import{_ as s,c as t,a2 as e,o as i}from"./chunks/framework.Dvyrx0Dh.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"packages/pocket/doc/pocket.compose.md","filePath":"packages/pocket/doc/pocket.compose.md"}'),p={name:"packages/pocket/doc/pocket.compose.md"};function n(o,a,h,r,l,k){return i(),t("div",null,a[0]||(a[0]=[e('<p><a href="./">Home</a> &gt; <a href="./pocket.html">@ailer/pocket</a> &gt; <a href="./pocket.compose.html">compose</a></p><h2 id="compose-function" tabindex="-1">compose() function <a class="header-anchor" href="#compose-function" aria-label="Permalink to &quot;compose() function&quot;">​</a></h2><p>函数组合，执行顺序从右到左 最后一个函数参数可以传递多个参数，其他函数必须是单参数函数</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes light-plus github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#B392F0;">compose</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">fns</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">[]) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#001080;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#000000;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#267F99;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#000000;--shiki-dark:#E1E4E8;">[]) </span><span style="--shiki-light:#0000FF;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#E1E4E8;"> any</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>fns</p></td><td><p>any[]</p></td><td><p>要组合的函数数组</p></td></tr></tbody></table> **Returns:** <p>(...args: any[]) =&gt; any</p><p>组合后的函数</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>const fn1 = (a0, a1, a3) =&gt; a0 + a1 + a2; const fn2 = (a0) =&gt; a0 * 10; const fn3 = (a0) =&gt; a0 + 2; const fn = compose(fn3, fn2, fn1); const result = fn(1, 2, 3) // =&gt; 1 * 2 * 3 = 6 * 10 = 60 + 2 =&gt; 62</p>',12)]))}const g=s(p,[["render",n]]);export{d as __pageData,g as default};
